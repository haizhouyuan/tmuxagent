[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tmux-agent"
version = "0.1.0"
description = "Lightweight tmux orchestration agent with approval workflow"
authors = [{ name = "tmuxagent Team" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.8",
    "PyYAML>=6.0",
    "httpx>=0.27",
    "prometheus-client>=0.20",
    "tomli>=2.0; python_version < \"3.11\""
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3",
    "pytest-cov>=5.0",
    "ruff>=0.5",
    "fastapi>=0.112",
    "uvicorn>=0.30",
    "jinja2>=3.1",
    "python-multipart>=0.0.7"
]
dashboard = [
    "fastapi>=0.112",
    "uvicorn[standard]>=0.30",
    "jinja2>=3.1",
    "python-multipart>=0.0.7"
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --cov=tmux_agent --cov-report=term-missing"
testpaths = [
    "tests"
]

[tool.ruff]
target-version = "py310"
line-length = 100
select = ["E", "F", "I", "B"]
ignore = ["E203", "E501"]

[tool.ruff.isort]
force-single-line = true

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]

[project.scripts]
tmux-agent-dashboard = "tmux_agent.dashboard.cli:main"
tmux-agent = "tmux_agent.agent_cli:main"
tmux-agent-notify-relay = "tmux_agent.notify_bridge:main"
tmux-agent-orchestrator = "tmux_agent.orchestrator_cli:main"
tmux-agent-orchestrator-replay = "tmux_agent.orchestrator.replay:main"
